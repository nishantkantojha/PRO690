name: CI
on: [push]

jobs:
  flutter_test:
    name: Test
    runs-on: ubuntu-latest      
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      
  flutter_build:
    name: Build
    needs: [flutter_test]
    runs-on: self-hosted
    env:
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
      PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
      #SANDBOX_CLIENT_ID: ${{ secrets.SANDBOX_CLIENT_ID }}
      #SANDBOX_CLIENT_SECRET: ${{ secrets.SANDBOX_CLIENT_SECRET }} 
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
    steps:
    - name: Slack Notification
      uses: act10ns/slack@v1
      with: 
        status: starting
        channel: '#flutter-sample'
        message: Starting Build and Deploy...
      if: always()

    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev'
      - run: flutter config --enable-web
      - run: flutter pub get
      - run: flutter build web --release
      - run: |
          docker build -t flutter-web .
      - run: |
          docker run -d -p 8080:80 --name flutter-web flutter-web 
    
    steps:
    - name: Slack Notification
      uses: act10ns/slack@v1
      with: 
        status: ${{ job.status }}
        channel: '#futter-sample'
        message: Build {{ env.GITHUB_REF_NAME }} branch Successfully
      if: always()

  flutter_deploy:
    name: Deploy
    needs: [flutter_build]
    runs-on: self-hosted
    steps:
      - run: docker --version
      - run: kubectl get po -A
      - run: kubectl cluster-info
      - run: kubectl get nodes